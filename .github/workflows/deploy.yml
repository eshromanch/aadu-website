name: Deploy to Contabo VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Add environment variables from secrets to make them available to the SSH script
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      # This build will likely still fail due to missing env vars, but that's okay
      # The real build happens on the server where we have the environment variables
      continue-on-error: true
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd /var/www/projects/aadu-website
          
          # Stop the application
          pm2 stop aadu-website || true
          
          # Backup current version
          if [ -d "app" ]; then
            cp -r app backups/app-$(date +%Y%m%d_%H%M%S)
          fi
          
          # Clone/pull latest code
          if [ ! -d "app/.git" ]; then
            git clone https://github.com/eshromanch/aadu-website.git app
          else
            cd app && git pull origin main
          fi
          
          cd app
          
          # Create .env.production file from GitHub Secrets
          cat > .env.production << EOF
MONGODB_URI=$MONGODB_URI
JWT_SECRET=$JWT_SECRET
NODE_ENV=production
EOF
          
          # Install dependencies and build
          npm ci
          npm run build
          
          # Start/restart with PM2
          pm2 start ecosystem.config.js || pm2 restart aadu-website
          
          # Reload Nginx
          sudo nginx -t && sudo systemctl reload nginx
          
          echo "Deployment completed!"